imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@PennsouthMdsBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
#doctrine:
#    dbal:
#        driver:   pdo_mysql
#        dbname:   xxxxxxx
#        user:     xxxxxxxx
#        password: xxxxxxxxx
#        charset:  UTF8
      #   host:     localhost
      #          port:     "1111"
      #          dbname:   xxxxxx
      #          user:     xxxxxx
      #          password: xxxxx
      #          charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
# the spool: type: file... parameter is recommended here: http://stackoverflow.com/questions/13122096/unable-to-send-e-mail-from-within-custom-symfony2-command-but-can-from-elsewhere
# ran composer install which overwrote the following parameters that I had defined in parameters.yml
#  mailer_port: 465
#  mailer_encryption: ssl
#  mailer_auth_mode: login
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    port:      465
    auth_mode: login
    encryption: ssl
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
  ##  spool:     { type: file, path: %kernel.root_dir%/spool }

        # an optional setting to configure a query string parameter which can be used to redirect
        # the user after authentication, e.g. /connect/facebook?_destination=/my/destination will
        # redirect the user to /my/destination after facebook authenticates them.  If this is not
        # set then the user will be redirected to the original resource that they requested, or
        # the base address if no resource was requested.  This is similar to the behaviour of
        # [target_path_parameter for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html).
        # target_path_parameter: _destination

        # an optional setting to use the HTTP REFERER header to be used in case no
        # previous URL was stored in the session (i.e. no resource was requested).
        # This is similar to the behaviour of
        # [using the referring URL for form login](http://symfony.com/doc/2.0/cookbook/security/form_login.html#using-the-referring-url).
        # use_referer: true

hwi_oauth:
        # list of names of the firewalls in which this bundle is active, this setting MUST be set
        #firewall_names: [secured_area]
        firewall_name: secured_area
        resource_owners:
           auth0:
             type:                auth0
             base_url:            xxxx
             client_id:           zzzz
             client_secret:       yyyyyy

# sfrizell comment - to set up Google as authenticator see: https://github.com/hwi/HWIOAuthBundle/blob/0.4/Resources/doc/resource_owners/google.md


# hwi_oauth:
#    resource_owners:
#        any_name:
#            type:                google
#            client_id:           472055766622-71qo0jah2n5gonhosh6s28rgoldoej4t.apps.googleusercontent.com
#            client_secret:       iS2IZqtFzKniVq0-h3atUlTQ
#            scope:               "openid email profile"